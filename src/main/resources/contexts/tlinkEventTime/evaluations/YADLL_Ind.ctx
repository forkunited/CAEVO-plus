context trainDevTestDataEventTimeTLink = EventTimeTLink(initScript="/tlinkEventTime/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context modelsEventTimeTLinkYadllInd = EventTimeTLink(initScript="/tlinkEventTime/methods/YADLL_Ind.ctx", initOnce="true", initOverrideByName="true");


classify_eval devYadllWSDCTBPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTB}, mode="MICRO");
classify_eval devYadllWSDCTBRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTB}, mode="MICRO");
classify_eval testYadllWSDCTBPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTB}, mode="MICRO");
classify_eval testYadllWSDCTBRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTB}, mode="MICRO");
classify_eval devYadllWSDCTAPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTA}, mode="MICRO");
classify_eval devYadllWSDCTARecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTA}, mode="MICRO");
classify_eval testYadllWSDCTAPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTA}, mode="MICRO");
classify_eval testYadllWSDCTARecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTA}, mode="MICRO");
classify_eval devYadllWSDCTIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTI}, mode="MICRO");
classify_eval devYadllWSDCTIRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTI}, mode="MICRO");
classify_eval testYadllWSDCTIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTI}, mode="MICRO");
classify_eval testYadllWSDCTIRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTI}, mode="MICRO");
classify_eval devYadllWSDCTIIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTII}, mode="MICRO");
classify_eval devYadllWSDCTIIRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTII}, mode="MICRO");
classify_eval testYadllWSDCTIIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTII}, mode="MICRO");
classify_eval testYadllWSDCTIIRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTII}, mode="MICRO");
classify_eval devYadllWSDCTSPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTS}, mode="MICRO");
classify_eval devYadllWSDCTSRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTS}, mode="MICRO");
classify_eval testYadllWSDCTSPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTS}, mode="MICRO");
classify_eval testYadllWSDCTSRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTS}, mode="MICRO");
classify_eval devYadllWSDCTVPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTV}, mode="MICRO");
classify_eval devYadllWSDCTVRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTV}, mode="MICRO");
classify_eval testYadllWSDCTVPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTV}, mode="MICRO");
classify_eval testYadllWSDCTVRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSDCTV}, mode="MICRO");

classify_eval devYadllWSBPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSB}, mode="MICRO");
classify_eval devYadllWSBRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSB}, mode="MICRO");
classify_eval testYadllWSBPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSB}, mode="MICRO");
classify_eval testYadllWSBRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSB}, mode="MICRO");
classify_eval devYadllWSAPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSA}, mode="MICRO");
classify_eval devYadllWSARecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSA}, mode="MICRO");
classify_eval testYadllWSAPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSA}, mode="MICRO");
classify_eval testYadllWSARecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSA}, mode="MICRO");
classify_eval devYadllWSIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSI}, mode="MICRO");
classify_eval devYadllWSIRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSI}, mode="MICRO");
classify_eval testYadllWSIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSI}, mode="MICRO");
classify_eval testYadllWSIRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSI}, mode="MICRO");
classify_eval devYadllWSIIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSII}, mode="MICRO");
classify_eval devYadllWSIIRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSII}, mode="MICRO");
classify_eval testYadllWSIIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSII}, mode="MICRO");
classify_eval testYadllWSIIRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSII}, mode="MICRO");
classify_eval devYadllWSSPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSS}, mode="MICRO");
classify_eval devYadllWSSRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSS}, mode="MICRO");
classify_eval testYadllWSSPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSS}, mode="MICRO");
classify_eval testYadllWSSRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSS}, mode="MICRO");
classify_eval devYadllWSVPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSV}, mode="MICRO");
classify_eval devYadllWSVRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSV}, mode="MICRO");
classify_eval testYadllWSVPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSV}, mode="MICRO");
classify_eval testYadllWSVRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllWSV}, mode="MICRO");

classify_eval devYadllDCTBPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTB}, mode="MICRO");
classify_eval devYadllDCTBRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTB}, mode="MICRO");
classify_eval testYadllDCTBPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTB}, mode="MICRO");
classify_eval testYadllDCTBRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTB}, mode="MICRO");
classify_eval devYadllDCTAPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTA}, mode="MICRO");
classify_eval devYadllDCTARecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTA}, mode="MICRO");
classify_eval testYadllDCTAPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTA}, mode="MICRO");
classify_eval testYadllDCTARecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTA}, mode="MICRO");
classify_eval devYadllDCTIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTI}, mode="MICRO");
classify_eval devYadllDCTIRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTI}, mode="MICRO");
classify_eval testYadllDCTIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTI}, mode="MICRO");
classify_eval testYadllDCTIRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTI}, mode="MICRO");
classify_eval devYadllDCTIIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTII}, mode="MICRO");
classify_eval devYadllDCTIIRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTII}, mode="MICRO");
classify_eval testYadllDCTIIPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTII}, mode="MICRO");
classify_eval testYadllDCTIIRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTII}, mode="MICRO");
classify_eval devYadllDCTSPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTS}, mode="MICRO");
classify_eval devYadllDCTSRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTS}, mode="MICRO");
classify_eval testYadllDCTSPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTS}, mode="MICRO");
classify_eval testYadllDCTSRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTS}, mode="MICRO");
classify_eval devYadllDCTVPrecision = Precision(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTV}, mode="MICRO");
classify_eval devYadllDCTVRecall = Recall(task=${trainDevTestDataEventTimeTLink.devTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTV}, mode="MICRO");
classify_eval testYadllDCTVPrecision = Precision(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTV}, mode="MICRO");
classify_eval testYadllDCTVRecall = Recall(task=${trainDevTestDataEventTimeTLink.testTask}, method=${modelsEventTimeTLinkYadllInd.yadllDCTV}, mode="MICRO");
