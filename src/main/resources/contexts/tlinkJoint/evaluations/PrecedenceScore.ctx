context trainDevTestDataEventTLink = EventTLink(initScript="/tlinkEvent/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataEventTimeTLink = EventTimeTLink(initScript="/tlinkEventTime/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataTimeTLink = TimeTLink(initScript="/tlinkTime/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context modelsJointTLinkPS = EventTimeTLink(initScript="/tlinkJoint/methods/PrecedenceScore.ctx", initOnce="true", initOverrideByName="true");

multi_classify_task multiDevTask = MultiClassification(tasks=(${trainDevTestDataEventTLink.devTask},${trainDevTestDataTimeTLink.devTask},${trainDevTestDataEventTimeTLink.devTask}));
multi_classify_task multiTestTask = MultiClassification(tasks=(${trainDevTestDataEventTLink.testTask},${trainDevTestDataTimeTLink.testTask},${trainDevTestDataEventTimeTLink.testTask}));

multi_classify_eval multiDevPrecision = MultiPrecision(task=${multiDevTask}, method=${modelsJointTLinkPS.ps}, mode="MICRO");
multi_classify_eval multiDevRecall = MultiRecall(task=${multiDevTask}, method=${modelsJointTLinkPS.ps}, mode="MICRO");
multi_classify_eval multiTestPrecision = MultiPrecision(task=${multiTestTask}, method=${modelsJointTLinkPS.ps}, mode="MICRO");
multi_classify_eval multiTestRecall = MultiRecall(task=${multiTestTask}, method=${modelsJointTLinkPS.ps}, mode="MICRO");
