ts_fn before3 = NGramContext(type="BEFORE", n="3");
ts_fn after3 = NGramContext(type="AFTER", n="3");
ts_fn inside1 = NGramInside(n="1");
ts_fn head = Head();
ts_str_fn strDef = String(cleanFn="BagOfWordsCleanFn");
ts_str_fn str = String();
ts_str_fn pos = PoS();
ts_str_fn lemma = TokenAnnotation(annotationType="lemma");
ts_str_fn synset = WordNetSynset();
ts_str_fn pred = PredicateSense();
ts_str_fn arg0 = PredicateArgument(tagFilter="A0");
ts_str_fn arg1 = PredicateArgument(tagFilter="A1");
ts_str_fn arg2 = PredicateArgument(tagFilter="A2");
ts_str_fn arg3 = PredicateArgument(tagFilter="A3");
ts_str_fn arg4 = PredicateArgument(tagFilter="A4");
ts_str_fn arg5 = PredicateArgument(tagFilter="A5");
ts_str_fn argTmp = PredicateArgument(tagFilter="AM-TMP");
ts_str_fn argLoc = PredicateArgument(tagFilter="AM-LOC");
ts_str_fn argMnr = PredicateArgument(tagFilter="AM-MNR");
str_fn catSorted = Cat(sorted="true");

feature fheadPosPair = TokenSpanFnDataVocab(scale="INDICATOR", minFeatureOccurrence="2", tokenExtractor="SourceTarget", fn=(${catSorted} o ${pos} o ${head}));
feature fheadLemmaPair = TokenSpanFnDataVocab(scale="INDICATOR", minFeatureOccurrence="2", tokenExtractor="SourceTarget", fn=(${catSorted} o ${lemma} o ${head}));
feature fheadPosSame = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="EQUALITY", fn=(${pos} o ${head}));
feature fheadLemmaSame = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="EQUALITY", fn=(${lemma} o ${head}));
feature fpredSenseSame = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="EQUALITY", fn=(${pred} o ${head}));
feature fw2vHeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head}));
feature fheadSynsetSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${synset} o ${head}));
feature fextentSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTargetExtent", mode="SIMILARITY", fn=(${strDef} o ${inside1}));
feature fcontextB3Similarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${strDef} o ${inside1} o ${before3}));
feature fcontextA3Similarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${strDef} o ${inside1} o ${after3}));
feature fArg0LemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${arg0}));
feature fArg1LemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${arg1}));
feature fArg2LemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${arg2}));
feature fArg3LemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${arg3}));
feature fArg4LemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${arg4}));
feature fArg5LemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${arg5}));
feature fArgTmpLemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${argTmp}));
feature fArgLocLemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${argLoc}));
feature fArgMnrLemmaSimilarity = TokenSpanFnComparison(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${lemma} o ${inside1} o ${argMnr}));
feature fw2vArg0HeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${arg0}));
feature fw2vArg1HeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${arg1}));
feature fw2vArg2HeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${arg2}));
feature fw2vArg3HeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${arg3}));
feature fw2vArg4HeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${arg4}));
feature fw2vArg5HeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${arg5}));
feature fw2vArgTmpHeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${argTmp}));
feature fw2vArgLocHeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${argLoc}));
feature fw2vArgMnrHeadSimilarity = Word2Vec(tokenExtractor="SourceTarget", mode="SIMILARITY", fn=(${str} o ${head} o ${argMnr}));
