context trainDevTestDataEventTLink = EventTLink(initScript="/tlinkEvent/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");
context modelsEventTLinkDetInd = EventTLink(initScript="/tlinkEvent/methods/Deterministic_TBD_Ind.ctx", initOnce="true", initOverrideByName="true");

classify_eval devGenGovBPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovB}, mode="MICRO");
classify_eval devGenGovBRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovB}, mode="MICRO");
classify_eval testGenGovBPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovB}, mode="MICRO");
classify_eval testGenGovBRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovB}, mode="MICRO");
classify_eval devGenGovAPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovA}, mode="MICRO");
classify_eval devGenGovARecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovA}, mode="MICRO");
classify_eval testGenGovAPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovA}, mode="MICRO");
classify_eval testGenGovARecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovA}, mode="MICRO");
classify_eval devGenGovIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovI}, mode="MICRO");
classify_eval devGenGovIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovI}, mode="MICRO");
classify_eval testGenGovIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovI}, mode="MICRO");
classify_eval testGenGovIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovI}, mode="MICRO");
classify_eval devGenGovIIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovII}, mode="MICRO");
classify_eval devGenGovIIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovII}, mode="MICRO");
classify_eval testGenGovIIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovII}, mode="MICRO");
classify_eval testGenGovIIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovII}, mode="MICRO");
classify_eval devGenGovSPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovS}, mode="MICRO");
classify_eval devGenGovSRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovS}, mode="MICRO");
classify_eval testGenGovSPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovS}, mode="MICRO");
classify_eval testGenGovSRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovS}, mode="MICRO");
classify_eval devGenGovVPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovV}, mode="MICRO");
classify_eval devGenGovVRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.genGovV}, mode="MICRO");
classify_eval testGenGovVPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovV}, mode="MICRO");
classify_eval testGenGovVRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.genGovV}, mode="MICRO");


classify_eval devReichenbachBPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachB}, mode="MICRO");
classify_eval devReichenbachBRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachB}, mode="MICRO");
classify_eval testReichenbachBPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachB}, mode="MICRO");
classify_eval testReichenbachBRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachB}, mode="MICRO");
classify_eval devReichenbachAPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachA}, mode="MICRO");
classify_eval devReichenbachARecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachA}, mode="MICRO");
classify_eval testReichenbachAPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachA}, mode="MICRO");
classify_eval testReichenbachARecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachA}, mode="MICRO");
classify_eval devReichenbachIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachI}, mode="MICRO");
classify_eval devReichenbachIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachI}, mode="MICRO");
classify_eval testReichenbachIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachI}, mode="MICRO");
classify_eval testReichenbachIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachI}, mode="MICRO");
classify_eval devReichenbachIIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachII}, mode="MICRO");
classify_eval devReichenbachIIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachII}, mode="MICRO");
classify_eval testReichenbachIIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachII}, mode="MICRO");
classify_eval testReichenbachIIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachII}, mode="MICRO");
classify_eval devReichenbachSPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachS}, mode="MICRO");
classify_eval devReichenbachSRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachS}, mode="MICRO");
classify_eval testReichenbachSPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachS}, mode="MICRO");
classify_eval testReichenbachSRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachS}, mode="MICRO");
classify_eval devReichenbachVPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachV}, mode="MICRO");
classify_eval devReichenbachVRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.reichenbachV}, mode="MICRO");
classify_eval testReichenbachVPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachV}, mode="MICRO");
classify_eval testReichenbachVRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.reichenbachV}, mode="MICRO");


classify_eval devRepGovBPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovB}, mode="MICRO");
classify_eval devRepGovBRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovB}, mode="MICRO");
classify_eval testRepGovBPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovB}, mode="MICRO");
classify_eval testRepGovBRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovB}, mode="MICRO");
classify_eval devRepGovAPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovA}, mode="MICRO");
classify_eval devRepGovARecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovA}, mode="MICRO");
classify_eval testRepGovAPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovA}, mode="MICRO");
classify_eval testRepGovARecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovA}, mode="MICRO");
classify_eval devRepGovIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovI}, mode="MICRO");
classify_eval devRepGovIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovI}, mode="MICRO");
classify_eval testRepGovIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovI}, mode="MICRO");
classify_eval testRepGovIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovI}, mode="MICRO");
classify_eval devRepGovIIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovII}, mode="MICRO");
classify_eval devRepGovIIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovII}, mode="MICRO");
classify_eval testRepGovIIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovII}, mode="MICRO");
classify_eval testRepGovIIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovII}, mode="MICRO");
classify_eval devRepGovSPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovS}, mode="MICRO");
classify_eval devRepGovSRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovS}, mode="MICRO");
classify_eval testRepGovSPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovS}, mode="MICRO");
classify_eval testRepGovSRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovS}, mode="MICRO");
classify_eval devRepGovVPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovV}, mode="MICRO");
classify_eval devRepGovVRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.repGovV}, mode="MICRO");
classify_eval testRepGovVPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovV}, mode="MICRO");
classify_eval testRepGovVRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.repGovV}, mode="MICRO");

classify_eval devWordNetBPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetB}, mode="MICRO");
classify_eval devWordNetBRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetB}, mode="MICRO");
classify_eval testWordNetBPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetB}, mode="MICRO");
classify_eval testWordNetBRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetB}, mode="MICRO");
classify_eval devWordNetAPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetA}, mode="MICRO");
classify_eval devWordNetARecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetA}, mode="MICRO");
classify_eval testWordNetAPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetA}, mode="MICRO");
classify_eval testWordNetARecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetA}, mode="MICRO");
classify_eval devWordNetIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetI}, mode="MICRO");
classify_eval devWordNetIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetI}, mode="MICRO");
classify_eval testWordNetIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetI}, mode="MICRO");
classify_eval testWordNetIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetI}, mode="MICRO");
classify_eval devWordNetIIPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetII}, mode="MICRO");
classify_eval devWordNetIIRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetII}, mode="MICRO");
classify_eval testWordNetIIPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetII}, mode="MICRO");
classify_eval testWordNetIIRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetII}, mode="MICRO");
classify_eval devWordNetSPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetS}, mode="MICRO");
classify_eval devWordNetSRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetS}, mode="MICRO");
classify_eval testWordNetSPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetS}, mode="MICRO");
classify_eval testWordNetSRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetS}, mode="MICRO");
classify_eval devWordNetVPrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetV}, mode="MICRO");
classify_eval devWordNetVRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.wordNetV}, mode="MICRO");
classify_eval testWordNetVPrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetV}, mode="MICRO");
classify_eval testWordNetVRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.wordNetV}, mode="MICRO");


classify_eval devAllVaguePrecision = Precision(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.modelsEventTLinkDet.allVague}, mode="MICRO");
classify_eval devAllVagueRecall = Recall(task=${trainDevTestDataEventTLink.devTask}, method=${modelsEventTLinkDetInd.modelsEventTLinkDet.allVague}, mode="MICRO");
classify_eval testAllVaguePrecision = Precision(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.modelsEventTLinkDet.allVague}, mode="MICRO");
classify_eval testAllVagueRecall = Recall(task=${trainDevTestDataEventTLink.testTask}, method=${modelsEventTLinkDetInd.modelsEventTLinkDet.allVague}, mode="MICRO");

