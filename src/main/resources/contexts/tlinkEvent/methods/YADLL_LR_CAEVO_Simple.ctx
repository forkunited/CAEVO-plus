context dataParamsEventTLink = EventTLink(initScript="/tlinkEvent/data/parameters/TBD.ctx", initOnce="true", initOverrideByName="true");
context featureSetsEventTLink = EventTLink(initScript="/tlinkEvent/featureSets/CAEVO_Plus.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataEventTLink = EventTLink(initScript="/tlinkEvent/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");

data_features trainMatrixWS = DataFeatureMatrix(data=${trainDevTestDataEventTLink.trainDataWS}, features=${featureSetsEventTLink.fs});
data_features trainMatrixEED = DataFeatureMatrix(data=${trainDevTestDataEventTLink.trainDataEED}, features=${featureSetsEventTLink.fs});

model yadll=YADLL(numEpochs="40", stepSize=".1", 
				  fnNodes=("Softmax", "NegativeLogLoss"), 
				  fnParameters=("Zeros", "Zeros"), 
				  Softmax_0_input="Zeros_0*x+Zeros_1", 
				  Softmax_0_size=${dataParamsEventTLink.labelCount}, 
				  NegativeLogLoss_1_input="Softmax_0", 
				  NegativeLogLoss_1_size="1", 
				  targetFnNode="Softmax_0",
				  lossFnNode="NegativeLogLoss_1",
				  earlyStopping="true") {
	array validLabels=${dataParamsEventTLink.labels};
};

evaluation acc=Accuracy();

classify_method yadllWSUnfiltered = SupervisedModel(model=${yadll}, data=${trainMatrixWS}, trainEvaluation=${acc});
classify_method yadllWSUnfilteredP = CloneClassifyMethod(method=${yadllWSUnfiltered}, numEpochs="4000");
classify_method yadllWSSub = FilterDatumIndicator(method=${yadllWSUnfilteredP}, datumIndicator="SomeWithinSentence");
classify_method yadllWS = InitClassifyMethod(devData=${trainDevTestDataEventTLink.devData}, method=${yadllWSSub});

classify_method yadllEEDUnfiltered = SupervisedModel(model=${yadll}, data=${trainMatrixEED}, trainEvaluation=${acc});
classify_method yadllEEDUnfilteredP = CloneClassifyMethod(method=${yadllEEDUnfiltered}, numEpochs="4000");
classify_method yadllEEDSub = FilterDatumIndicator(method=${yadllEEDUnfilteredP}, datumIndicator="SomeWithinSentenceDominant");
classify_method yadllEED = InitClassifyMethod(devData=${trainDevTestDataEventTLink.devData}, method=${yadllEEDSub});
